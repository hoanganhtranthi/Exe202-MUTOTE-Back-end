<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MuTote.API</name>
    </assembly>
    <members>
        <member name="M:MuTote.API.Controllers.CategoryController.GetCategorys(MuTote.Domain.Enums.Enum.CategoryChoice)">
            <summary>
            Get list of categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CategoryController.GetCategory(System.Int32,MuTote.Domain.Enums.Enum.CategoryChoice)">
            <summary>
            Get category by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CategoryController.UpdateCategory(MuTote.Application.DTO.Request.CreateCategoryRequest,System.Int32,MuTote.Domain.Enums.Enum.CategoryChoice)">
            <summary>
            Update information of category
            </summary>
            <param name="categoryRequest"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CategoryController.DeleteCategory(System.Int32,MuTote.Domain.Enums.Enum.CategoryChoice)">
            <summary>
            Delete category
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CategoryController.CreateCategory(MuTote.Application.DTO.Request.CreateCategoryRequest,MuTote.Domain.Enums.Enum.CategoryChoice)">
            <summary>
            Create category
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CustomerController.GetCustomers(MuTote.Application.DTO.Request.PagingRequest,MuTote.Application.DTO.Request.CustomerRequest)">
            <summary>
            Get list of customers
            </summary>
            <param name="pagingRequest"></param>
            <param name="userRequest"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CustomerController.GetCustomer(System.Int32)">
            <summary>
            Get customer by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CustomerController.UpdateCustomer(MuTote.Application.DTO.Request.UpdateCustomerRequest,System.Int32)">
            <summary>
            Update profile of customer
            </summary>
            <param name="userRequest"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CustomerController.GetToUpdateStatus(System.Int32)">
            <summary>
            Delete customer
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CustomerController.Verification(System.String,System.String)">
            <summary>
            Send OTP 
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CustomerController.CreateCustomer(MuTote.Application.DTO.Request.CreateCustomerRequest)">
            <summary>
            Sign Up account of customer
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CustomerController.Login(MuTote.Application.DTO.Request.LoginRequest)">
            <summary>
            Login by phone and password
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.CustomerController.ResetPassword(MuTote.Application.DTO.Request.ResetPasswordRequest)">
            <summary>
            Reset password when forgot password
            </summary>
            <param name="resetPassword"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.DesignerController.GetDesigners(MuTote.Application.DTO.Request.PagingRequest,MuTote.Application.DTO.Request.DesignerRequest)">
            <summary>
            Get list of designers
            </summary>
            <param name="pagingRequest"></param>
            <param name="userRequest"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.DesignerController.GetDesigner(System.Int32)">
            <summary>
            Get designer by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.DesignerController.UpdateDesigner(MuTote.Application.DTO.Request.UpdateDesignerRequest,System.Int32)">
            <summary>
            Update profile of designer
            </summary>
            <param name="userRequest"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.DesignerController.GetToUpdateStatus(System.Int32)">
            <summary>
            Delete designer
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.DesignerController.Verification(System.String,System.String)">
            <summary>
            Send OTP 
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.DesignerController.CreateDesigner(MuTote.Application.DTO.Request.CreateDesignerRequest)">
            <summary>
            Sign Up account of designer by phone
            </summary>
            <param name="designer"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.DesignerController.Login(MuTote.Application.DTO.Request.LoginRequest)">
            <summary>
            Login
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.DesignerController.ResetPassword(MuTote.Application.DTO.Request.ResetPasswordRequest)">
            <summary>
            Reset password when forgot password
            </summary>
            <param name="resetPassword"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.MaterialController.GetMaterials(MuTote.Application.DTO.Request.PagingRequest,MuTote.Application.DTO.Request.MaterialRequest)">
            <summary>
            Get list of materials
            </summary>
            <param name="pagingRequest"></param>
            <param name="materialRequest"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.MaterialController.GetMaterial(System.Int32)">
            <summary>
            Get material by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.MaterialController.DeleteMaterial(System.Int32)">
            <summary>
            Delete material
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.MaterialController.CreateMaterial(MuTote.Application.DTO.Request.CreateMaterialRequest)">
            <summary>
            Create material
            </summary>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.OrderController.GetOrders(MuTote.Application.DTO.Request.PagingRequest,MuTote.Application.DTO.Request.OrderRequest)">
            <summary>
            Get list of orders
            </summary>
            <param name="pagingRequest"></param>
            <param name="orderRequest"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.OrderController.GetOrder(System.Int32)">
            <summary>
            Get order by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.OrderController.GetToUpdateStatus(System.Int32)">
            <summary>
            Delete order
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.OrderController.CreateOrder(MuTote.Application.DTO.Request.CreateOrderRequest)">
            <summary>
            Create order
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.OrderController.GetReportOrder(MuTote.Domain.Enums.Enum.ReportOption,System.Int32,System.Int32)">
            <summary>
            Get reports on admin orders (  Month=1,  Quarter=0)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.ProductController.GetProducts(MuTote.Application.DTO.Request.PagingRequest,MuTote.Application.DTO.Request.ProductRequest)">
            <summary>
            Get list of products
            </summary>
            <param name="pagingRequest"></param>
            <param name="productRequest"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.ProductController.GetProduct(System.Int32)">
            <summary>
            Get product by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.ProductController.UpdateProduct(System.Int32,System.Nullable{System.Int32},System.Nullable{MuTote.Domain.Enums.Enum.ProductStatusEnum})">
            <summary>
            Update product's unit in stock and status ( NewProduct=1, Avaliable = 2, OutOfStock = 0)
            </summary> 
            <param name="id"></param>
            /// <param name="unitInStock"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.ProductController.CreateProduct(MuTote.Application.DTO.Request.CreateProductRequest)">
            <summary>
            Create product
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.WishListController.GetWishLists(MuTote.Application.DTO.Request.PagingRequest,MuTote.Application.DTO.Request.WishListRequest)">
            <summary>
            Get list of wishlists
            </summary>
            <param name="pagingRequest"></param>
            <param name="wishlistRequest"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.WishListController.GetWishList(System.Int32)">
            <summary>
            Get wishlist by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.WishListController.UpdateWishList(System.Int32,System.Int32)">
            <summary>
            Update information of wishlist
            </summary>
            <param name="quantity"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.WishListController.DeleteWishList(System.Int32)">
            <summary>
            Delete wishlist
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MuTote.API.Controllers.WishListController.CreateWishList(MuTote.Application.DTO.Request.CreateWishListRequest)">
            <summary>
            Create wishlist
            </summary>
            <param name="wishlist"></param>
            <returns></returns>
        </member>
    </members>
</doc>
